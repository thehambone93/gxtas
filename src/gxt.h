/*
 * Copyright (c) 2017 Wes Hampson <thehambone93@gmail.com>
 *
 * Licensed under the MIT License. See LICENSE at top level directory.
 */

#ifndef _GXTMAKER_GXT_H_
#define _GXTMAKER_GXT_H_

#include <stdint.h>
#include <stdlib.h>

#define GXT_KEY_MAX_LEN 8

/**
 * GXT TKEY entry structure for GTA2, GTA3, VC, LCS, and VCS.
 */
struct gxt_key
{
    uint32_t offset;        /* Offset of GXT string in TDAT,
                               relative to start of first entry. */
    char name[8];           /* TDAT entry name (7 chars + 1 NUL) */
};

struct gxt_block_header
{
    char sig[4];
    uint32_t size;
};

/**
 * GXT TKEY entry structure for GTA SA and IV.
 */
struct gxt_key_saiv
{
    uint32_t offset;        /* Offset of GXT string in TDAT,
                               relative to start of first entry. */
    uint32_t name_crc;      /* CRC32 sum of TDAT entry name */
};

typedef uint16_t gxt_char;

size_t gxt_strlen(const gxt_char *str);

///**
// * UTF-8 -> GTA3 character map.
// * Use high bits for column, low bits for row.
// */
//const unsigned char gta3_charset[16][16] = 
//{
//    /* TODO: see what non-printable chars map to in-game */
//    /* Lower 0x7F seems to match ASCII/UTF-8. */
//    /* Don't worry about symbols changing between fonts. This is controlled by the game, not GXT */
//    /* Mostly worry about foreign chars, things that persist across all fonts */
//
//    /* TODO: fill in */
//    /*  x0    x1    x2    x3    x4    x5    x6    x7    x8    x9    xA    xB    xC    xD    xE    xF */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* 0x */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* 1x */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* 2x */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* 3x */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* 4x */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* 5x */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* 6x */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* 7x */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* 8x */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* 9x */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* Ax */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* Bx */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* Cx */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* Dx */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /* Ex */
//    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }  /* Fx */
//};

#endif /* _GXTMAKER_GXT_H_ */
